# This is a basic workflow to help you get started with Actions

name: azure_bicep_github_action_pipeline

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_RESOURCE_GROUP: "bicep-deployment-dev-rg"
  BICEP_TEMPLATE_FILE_PATH: "./main.bicep"
  BICEP_TEMPLATE_FILE_PARAMETERS_PATH: "./main.parameters.json"
  ENVIRONMENT: "dev"

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Authenticate to Az CLI using OIDC
      # - name: "Az CLI login"
      #   uses: azure/login@v1
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Bicep Lint
        uses: Azure/cli@v2
        with:
          azcliversion: 2.63.0
          inlineScript: az bicep build --file ${{env.BICEP_TEMPLATE_FILE_PATH}}

      # Validate whether a template is valid at Resource Group scope level
      - name: Bicep Validate
        uses: Azure/cli@v2
        with:
          azcliversion: 2.63.0
          inlineScript: |
            az deployment group validate --name validate-group-deployment-${{ github.run_id }}-${{github.run_attempt}} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --template-file ${{env.BICEP_TEMPLATE_FILE_PATH}} \
            --parameters @${{env.BICEP_TEMPLATE_FILE_PARAMETERS_PATH}}

            # az deployment sub validate \
            #   --name validate-subscription-deployment-${{ github.run_id }}-${{github.run_attempt}} \
            #   --template-file main.bicep \
            #   --location $LOCATION

      # Preview changes
      - name: "What-If"
        uses: Azure/cli@v2
        with:
          azcliversion: 2.63.0
          inlineScript: |
            az deployment group what-if \
            --name whatif-group-deployment-${{ github.run_id }}-${{github.run_attempt}} \
            --template-file ${{env.BICEP_TEMPLATE_FILE_PATH}} \
            --parameters @${{env.BICEP_TEMPLATE_FILE_PARAMETERS_PATH}} > whatif

      # Create string output of Whatif
      - name: Create String Output
        id: whatif-string
        run: |
          WHATIF=$(cat whatif)

          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Whatif Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "$WHATIF" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      # Publish Bicep Whatif Plan as task summary
      - name: Publish Whatif to Task Summary
        env:
          SUMMARY: ${{ steps.whatif-string.outputs.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

      # - name: Deploy Bicep Code using Git Action
      #   uses: azure/arm-deploy@v1
      #   with:
      #     scope: "resourcegroup"
      #     subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
      #     template: ${{env.BICEP_TEMPLATE_FILE_PATH}}
      #     parameters: ${{env.BICEP_TEMPLATE_FILE_PARAMETERS_PATH}}
      #     failOnStdErr: false

      - name: Deploy Bicep Code using AZ CLI command
        run: |
          az deployment group create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name "${{env.ENVIRONMENT}}-deployment-${{github.run_id}}-${{github.run_attempt}}" \
          --template-file ${{env.BICEP_TEMPLATE_FILE_PATH}} \
          --parameters @${{env.BICEP_TEMPLATE_FILE_PARAMETERS_PATH}}
